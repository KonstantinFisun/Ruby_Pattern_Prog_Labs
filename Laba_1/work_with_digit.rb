def main
  number = ARGV.first # Считываем число, поступившее программе
  puts("Сумма цифр в числе '#{number}' - #{sum_digits_number(number)}") # вызов функции суммы цифр в числе
  puts("Произведение цифр в числе '#{number}' - #{mul_digits_number(number)}") # вызов функции суммы цифр в числе
  puts("Минимальная цифра в числе '#{number}' - #{min_digit_number(number)}") # вызов функции минимальной цифры в числе
  puts("Максимальная цифра в числе '#{number}' - #{max_digit_number(number)}") # вызов функции максимальной цифры в числе
end

# Функция суммы цифр в числе
def sum_digits_number(number)
  number.split('').  # разбить на отдельные буквы (получим массив однобуквенных строк)
      map {|d| d.to_i }. # буквы (цифры) преобразуем в числа (получим массив чисел)
      inject{|a,b| a + b} #  суммируем
end

# Функция произведения цифр в числе
def mul_digits_number(number)
  number.split('').  # разбить на отдельные буквы (получим массив однобуквенных строк)
      map {|d| d.to_i }. # буквы (цифры) преобразуем в числа (получим массив чисел)
      inject{|a,b| a * b} #  умножаем
end

# Функция минимальной цифры в числе
def min_digit_number(number)
  number.split('').  # разбить на отдельные буквы (получим массив однобуквенных строк)
      map {|d| d.to_i }. # буквы (цифры) преобразуем в числа (получим массив чисел)
      min # находим минимальное в массиве
end

# Функция максимальной цифры в числе
def max_digit_number(number)
  number.split('').  # разбить на отдельные буквы (получим массив однобуквенных строк)
      map {|d| d.to_i }. # буквы (цифры) преобразуем в числа (получим массив чисел)
      max # находим максимальное в массиве
end

if __FILE__ == $0
    main
end
